/***
 *
 * 
 *    MMMMMMMM               MMMMMMMMIIIIIIIIIINNNNNNNN        NNNNNNNNIIIIIIIIII             GGGGGGGGGGGGGFFFFFFFFFFFFFFFFFFFFFFXXXXXXX       XXXXXXX
 *    M:::::::M             M:::::::MI::::::::IN:::::::N       N::::::NI::::::::I          GGG::::::::::::GF::::::::::::::::::::FX:::::X       X:::::X
 *    M::::::::M           M::::::::MI::::::::IN::::::::N      N::::::NI::::::::I        GG:::::::::::::::GF::::::::::::::::::::FX:::::X       X:::::X
 *    M:::::::::M         M:::::::::MII::::::IIN:::::::::N     N::::::NII::::::II       G:::::GGGGGGGG::::GFF::::::FFFFFFFFF::::FX::::::X     X::::::X
 *    M::::::::::M       M::::::::::M  I::::I  N::::::::::N    N::::::N  I::::I        G:::::G       GGGGGG  F:::::F       FFFFFFXXX:::::X   X:::::XXX
 *    M:::::::::::M     M:::::::::::M  I::::I  N:::::::::::N   N::::::N  I::::I       G:::::G                F:::::F                X:::::X X:::::X   
 *    M:::::::M::::M   M::::M:::::::M  I::::I  N:::::::N::::N  N::::::N  I::::I       G:::::G                F::::::FFFFFFFFFF       X:::::X:::::X    
 *    M::::::M M::::M M::::M M::::::M  I::::I  N::::::N N::::N N::::::N  I::::I       G:::::G    GGGGGGGGGG  F:::::::::::::::F        X:::::::::X     
 *    M::::::M  M::::M::::M  M::::::M  I::::I  N::::::N  N::::N:::::::N  I::::I       G:::::G    G::::::::G  F:::::::::::::::F        X:::::::::X     
 *    M::::::M   M:::::::M   M::::::M  I::::I  N::::::N   N:::::::::::N  I::::I       G:::::G    GGGGG::::G  F::::::FFFFFFFFFF       X:::::X:::::X    
 *    M::::::M    M:::::M    M::::::M  I::::I  N::::::N    N::::::::::N  I::::I       G:::::G        G::::G  F:::::F                X:::::X X:::::X   
 *    M::::::M     MMMMM     M::::::M  I::::I  N::::::N     N:::::::::N  I::::I        G:::::G       G::::G  F:::::F             XXX:::::X   X:::::XXX
 *    M::::::M               M::::::MII::::::IIN::::::N      N::::::::NII::::::II       G:::::GGGGGGGG::::GFF:::::::FF           X::::::X     X::::::X
 *    M::::::M               M::::::MI::::::::IN::::::N       N:::::::NI::::::::I        GG:::::::::::::::GF::::::::FF           X:::::X       X:::::X
 *    M::::::M               M::::::MI::::::::IN::::::N        N::::::NI::::::::I          GGG::::::GGG:::GF::::::::FF           X:::::X       X:::::X
 *    MMMMMMMM               MMMMMMMMIIIIIIIIIINNNNNNNN         NNNNNNNIIIIIIIIII             GGGGGG   GGGGFFFFFFFFFFF           XXXXXXX       XXXXXXX
 * 
 * 
 * 
 * 
 * minigfx is a tiny graphics library, providing a unified API for Windows and Linux.
 * It was inspired by the tigr graphics library, but has been stripped down on one side
 * but has been extended with other useful things on the other side.
 * -----------------------------------------------------------------------------------
 * 
 *  • Bitmap-backed windows.
 *  • Direct access to bitmaps, no locking.
 *  • Basic drawing helpers (plot, line, blitter).
 *  • Text output using bitmap fonts.
 *  • Mouse, touch and keyboard input.
 *  • PNG loading, drawing and saving.
 *  • Easy pixel shader access.
 * 
 * 
 * How to set up minigfx
 * ----------------------
 * 
 * minigfx is supplied as a single .h file.
 * To use it, you just drop it right into your project.
 * 
 * 1. Grab minigfx.h
 * 2. Throw it into your project
 * 3. Link with:
 *       • -lopengl32 and -lgdi32 on Windows
 *       • -lGLU -lGL -lX11 on Linux
 * 
 * 
 * Custom fonts
 * -------------
 * 
 * minigfx comes with a built-in bitmap font, accessed by the tfont variable. Custom fonts can be loaded from bitmaps
 * using mgLoadFont. A font bitmap contains rows of characters separated by same-colored borders. minigfx assumes
 * that the borders use the same color as the top-left pixel in the bitmap. Each character is assumed to be drawn in
 * white on a transparent background to make tinting work.
 * 
 * 
 * Custom pixel shaders
 * ---------------------
 * 
 * minigfx uses a built-in pixel shader that provides a couple of stock effects as controlled by mgSetPostFX. These stock
 * effects can be replaced by calling mgSetPostShader with a custom shader. The custom shader is in the form of a
 * shader function: void fxShader(out vec4 color, in vec2 uv) and has access to the four parameters from
 * mgSetPostFX as a uniform vec4 called parameters.
 * 
 * Example:
 * 
 *     #include "minigfx.h"
 *     #include "math.h"
 *     
 *     const char fxShader[] =
 *         "void fxShader(out vec4 color, in vec2 uv) {"
 *         "   vec2 tex_size = vec2(textureSize(image, 0));"
 *         "   vec4 c = texture(image, (floor(uv * tex_size) + 0.5 * sin(parameters.x)) / tex_size);"
 *         "   color = c;"
 *         "}";
 *     
 *     int main(int argc, char* argv[]) {
 *         MgSurface* screen = mgWindow(320, 240, "Shady", 0);
 *         mgSetPostShader(screen, fxShader, sizeof(fxShader) - 1);
 *     
 *         float duration = 1;
 *         float phase = 0;
 *         while (!mgClosed(screen) && !mgKeyDown(screen, TK_ESCAPE)) {
 *             phase += mgTime();
 *             while (phase > duration) {
 *                 phase -= duration;
 *             }
 *             float p = 6.28 * phase / duration;
 *             mgSetPostFX(screen, p, 0, 0, 0);
 *             mgClear(screen, mgRGB(0x80, 0x90, 0xa0));
 *             mgPrint(screen, tfont, 120, 110, mgRGB(0xff, 0xff, 0xff), "Shady business");
 *             mgUpdate(screen);
 *         }
 *         mgFree(screen);
 *         return 0;
 *     }
 * 
 */



#pragma once

#ifdef __cplusplus
extern "C" {
#endif

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_header.h

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

#ifdef __cplusplus
}
#endif


/***
 * ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████ 
 * ██                                                                                                                                ██ 
 * ██                                                                                                                                ██ 
 * ██       ██ ███    ███ ██████  ██      ███████ ███    ███ ███████ ███    ██ ████████  █████  ████████ ██  ██████  ███    ██       ██ 
 * ██       ██ ████  ████ ██   ██ ██      ██      ████  ████ ██      ████   ██    ██    ██   ██    ██    ██ ██    ██ ████   ██       ██ 
 * ██       ██ ██ ████ ██ ██████  ██      █████   ██ ████ ██ █████   ██ ██  ██    ██    ███████    ██    ██ ██    ██ ██ ██  ██       ██  
 * ██       ██ ██  ██  ██ ██      ██      ██      ██  ██  ██ ██      ██  ██ ██    ██    ██   ██    ██    ██ ██    ██ ██  ██ ██       ██  
 * ██       ██ ██      ██ ██      ███████ ███████ ██      ██ ███████ ██   ████    ██    ██   ██    ██    ██  ██████  ██   ████       ██  
 * ██                                                                                                                                ██
 * ██                                                                                                                                ██
 * ████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                                                                                      
 */


#ifdef MINIGFX_IMPLEMENTATION
#ifdef __cplusplus
extern "C" {
#endif

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_font.h

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_internal.h

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_upscale_gl_fs.h

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_upscale_gl_vs.h

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_bitmaps.c

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_loadpng.c

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_savepng.c

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_inflate.c

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_print.c

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_win.c

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_linux.c

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_gl.c

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_utils.c

// #######################################################################################################################################
// #######################################################################################################################################
// #######################################################################################################################################

// mg_extensions.c

#ifdef __cplusplus
}
#endif
#endif // MINIGFX_IMPLEMENTATION